{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "App",
            "id": "component-App-00c547ba50dbe3f5b4bdfe2b4c27a643e085e9c9f9684e5ba5a650c2ea4925b36c23130ea9d3690301bbdd6fbc7cd5f1dfe5bb1c2e2d2291dc77daade99eaabc",
            "file": "src/app/app.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "signal('angular-20')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                },
                {
                    "name": "TableComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, signal } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport {ButtonComponent} from './components/button/button.component';\nimport TableComponent from './components/table/table.component';\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet,ButtonComponent, TableComponent],\n  templateUrl: './app.html',\n  styleUrl: './app.scss'\n})\nexport class App {\n  protected readonly title = signal('angular-20');\n}\n",
            "styleUrl": "./app.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<h1>Hello World</h1>\n<app-button [primary]=\"true\" [label]=\"'Button'\"></app-button>\n<app-table></app-table>\n<router-outlet />\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-f2d87b0001ee9c22cc88a00a7341b7e2f44b605977e7494290d5c8be3e849f1c099cf8aacd39bfebde8dd1132ac6d5bb74b281fb1651bad5b1d2fd79796db355",
            "file": "src/app/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "templateUrl": [
                "./button.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhat background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 657,
                            "end": 670,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 658,
                                "end": 666,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIs this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nHow large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 23,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOptional click handler",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 35,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {Component, Input, Output, EventEmitter, booleanAttribute} from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './button.html',\n  styleUrls: ['./button.css'],\n})\n\nexport class ButtonComponent {\n  /** Is this the principal call to action on the page? */\n  @Input({transform: booleanAttribute})\n  primary = false;\n\n  /** What background color to use */\n  @Input()\n  backgroundColor?: string;\n\n  /** How large should the button be? */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /** Optional click handler */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'btn btn-primary' : 'btn btn-secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button--small {\n  padding: 10px 16px;\n  font-size: 12px;\n}\n.storybook-button--medium {\n  padding: 11px 20px;\n  font-size: 14px;\n}\n.storybook-button--large {\n  padding: 12px 24px;\n  font-size: 16px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 37
                    }
                }
            },
            "templateData": "<button\r\n  type=\"button\"\r\n  (click)=\"onClick.emit($event)\"\r\n  [ngClass]=\"classes\"\r\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n>\r\n  {{ label }}\r\n</button>\r\n"
        },
        {
            "name": "DatepickerComponent",
            "id": "component-DatepickerComponent-7f3433ec5d4b2cbf92be54c2396a0f5d24eea660ca6172856b56b458fb4ebd165b040886311a92b11d29ef9489a7bbb8c35f157b26dfd5fec9121b27297c9d89",
            "file": "src/app/components/forms/datepicker/datepicker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-datepicker",
            "styleUrls": [
                "./datepicker.css"
            ],
            "styles": [],
            "templateUrl": [
                "./datepicker.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "dateChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component,Input,Output,EventEmitter} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-datepicker',\r\n  templateUrl: './datepicker.html',\r\n  styleUrls: ['./datepicker.css'],\r\n})\r\n\r\nexport default class DatepickerComponent {\r\n  @Input() date: any;\r\n  @Output() dateChange = new EventEmitter<string>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./datepicker.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": ""
        },
        {
            "name": "Dropdown",
            "id": "component-Dropdown-e83dab135f9d3d0440463489ea9df1177460b0a176cc4e0dd42cc91060f2f8aec19d4a28d7f573a0ae058ff48b49c7ef78ec7b369cef71c4e06605fd38017bac",
            "file": "src/app/components/forms/dropdown/dropdown.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dropdown",
            "styleUrls": [
                "./dropdown.css"
            ],
            "styles": [],
            "templateUrl": [
                "./dropdown.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "searchText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "searchTextChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input,Output, EventEmitter} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dropdown',\r\n  templateUrl: './dropdown.html',\r\n  styleUrls: ['./dropdown.css']\r\n})\r\nexport class Dropdown {\r\n  @Input() searchText: any;\r\n  @Output() searchTextChange = new EventEmitter<string>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dropdown.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<button class=\"btn dropdown-toggle\" type=\"button\" id=\"dropDownMenuButton\" data-bs-toggle=\"dropdown\">\r\n  Carla Monterola\r\n</button>\r\n<ul class=\"dropdown-menu\">\r\n  <li><a class=\"dropdown-item\">Vanessa</a></li>\r\n</ul>\r\n"
        },
        {
            "name": "SearchBoxComponent",
            "id": "component-SearchBoxComponent-4ceb3c7ae80999b95895d72a9374dd2e0209a66b7d49fda6c5a16878628fb0a65eb8a9b0cab1723ab283c2db1352db6c09ded16cbd33c6518349baec06336b84",
            "file": "src/app/components/forms/searchbox/searchbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-searchbox",
            "styleUrls": [
                "./searchbox.css"
            ],
            "styles": [],
            "templateUrl": [
                "./searchbox.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "searchText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "search",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component,Input,Output,EventEmitter} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-searchbox',\r\n  templateUrl: './searchbox.html',\r\n  styleUrls: ['./searchbox.css'],\r\n})\r\n\r\nexport default class SearchBoxComponent {\r\n  /*Shape of the searchbox object*/\r\n  @Input() searchText: any;\r\n  @Output() search = new EventEmitter<string>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./searchbox.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"w-auto input-group has-validation\">\r\n  <span class=\"input-group-text\">\r\n    <i class=\"bi bi-search\"></i>\r\n  </span>\r\n  <div class=\"form-floating is-invalid\">\r\n    <input type=\"text\" class=\"form-control is-invalid\" id=\"searchBox\" placeholder=\"search...\" required>\r\n    <label for=\"searchBox\">search...</label>\r\n  </div>\r\n  <div class=\"invalid-feedback\">\r\n    Please choose a username.\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-54736dd81bb32e5417c3f6876dc186805e10c840c2755039fb0e8c47bc5a860e9ac699c8777393b5fee83338335dc84b5eb74421e429130615f80eed3edcff89",
            "file": "src/app/components/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table",
            "styleUrls": [
                "./table.css"
            ],
            "styles": [],
            "templateUrl": [
                "./table.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "task",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onTaskClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output,EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-table',\r\n    templateUrl: './table.html',\r\n    styleUrls: ['./table.css'],\r\n  }\r\n)\r\n\r\nexport default class TableComponent {\r\n  /*\r\n   * The shape of the task object\r\n   */\r\n  @Input() task: any;\r\n\r\n  @Output() onTaskClick = new EventEmitter<any>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".col-head {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: #f5f4f4;\r\n}\r\n\r\n.table-head{\r\n  background: #f5f4f4;\r\n}\r\n",
                    "styleUrl": "./table.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<table class=\"table\">\r\n  <thead>\r\n  <tr>\r\n    <th scope=\"col\" class=\"table-head\">\r\n      <div class=\"col-head\">\r\n        # de Ticket\r\n        <i class=\"bi bi-arrow-up\"></i>\r\n      </div>\r\n    </th>\r\n    <th scope=\"col\" class=\"table-head\">\r\n     <div class=\"col-head\">\r\n       Vacante\r\n       <i class=\"bi bi-arrow-up\"></i>\r\n     </div>\r\n    </th>\r\n    <th scope=\"col\" class=\"table-head\">\r\n     <div class=\"col-head\">\r\n       Descripcion\r\n       <i class=\"bi bi-arrow-up\"></i>\r\n     </div>\r\n    </th>\r\n    <th scope=\"col\" class=\"table-head\">\r\n      <div class=\"col-head\">\r\n        Reclutador\r\n        <i class=\"bi bi-arrow-up\"></i>\r\n      </div>\r\n    </th>\r\n    <th scope=\"col\" class=\"table-head\">\r\n      <div class=\"col-head\">\r\n        Estatus\r\n        <i class=\"bi bi-arrow-up\"></i>\r\n      </div>\r\n    </th>\r\n    <th scope=\"col\" class=\"table-head\">\r\n      <div class=\"col-head\">\r\n        Estatus de reclutador\r\n        <i class=\"bi bi-arrow-up\"></i>\r\n      </div>\r\n    </th>\r\n    <th scope=\"col\" class=\"table-head\">\r\n      <div class=\"col-head\">\r\n        Comentarios\r\n        <i class=\"bi bi-arrow-up\"></i>\r\n      </div>\r\n    </th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr>\r\n    <td>Ticket 123</td>\r\n    <td>Desarrollador</td>\r\n    <td>\r\n      <i class=\"bi bi-book\"></i>\r\n    </td>\r\n    <td>\r\n      <div class=\"dropdown\">\r\n        <img src=\"\" alt=\"\" width=\"30\" height=\"30\">\r\n        <button class=\"btn dropdown-toggle\" type=\"button\" id=\"dropDownMenuButton\" data-bs-toggle=\"dropdown\">\r\n          Carla Monterola\r\n        </button>\r\n        <ul class=\"dropdown-menu\">\r\n          <li><a class=\"dropdown-item\">Vanessa</a></li>\r\n        </ul>\r\n      </div>\r\n    </td>\r\n    <td>\r\n      <span class=\"badge badge-pill bg-primary\">activo</span>\r\n    </td>\r\n    <td>\r\n      <div class=\"dropdown\">\r\n        <button class=\"btn dropdown-toggle\" type=\"button\" id=\"dropDownMenuButton\" data-bs-toggle=\"dropdown\">\r\n          Asignada\r\n        </button>\r\n        <ul class=\"dropdown-menu\">\r\n          <li><a class=\"dropdown-item\">Asignada</a></li>\r\n          <li><a class=\"dropdown-item\">Sin asignar</a></li>\r\n        </ul>\r\n      </div>\r\n    </td>\r\n    <td>Lorem ipsum dolor sit amet, consectetur</td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes)\n  ]\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes)\n  ]\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 10,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.ts",
                "type": "component",
                "linktype": "component",
                "name": "App",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/app/components/forms/datepicker/datepicker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatepickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/forms/dropdown/dropdown.ts",
                "type": "component",
                "linktype": "component",
                "name": "Dropdown",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/forms/searchbox/searchbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchBoxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}