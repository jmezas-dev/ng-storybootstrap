{
    "pipes": [],
    "interfaces": [
        {
            "name": "IVacant",
            "id": "interface-IVacant-520907557e18a823a283e7732ddbbe397082a27b6d9bf27fa20e32ccee642e17929903f4cd38b6b9624b80b56ec97db2b4eea26b27c1c22fbbd7098000f6ab9c",
            "file": "src/app/interfaces/IVacantRow.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IVacant {\n  id:number;\n  ticketNumber:string;\n  vacantName:string;\n  descriptionLink:string;\n  recruiter:any;\n  status:string;\n  recruiterStatus:any;\n  comments:string;\n}\n",
            "properties": [
                {
                    "name": "comments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "descriptionLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "recruiter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "recruiterStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "ticketNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "vacantName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "SelectedTdAttributes",
            "id": "interface-SelectedTdAttributes-11f2750c479facc709d0f72d5aacd16dae8f8fd24981ce262375862f0a22ede0e74ef8a62d1a90eb40d7dfab802c19b8529529f3f0396d1fee5974191d691433",
            "file": "src/app/layout/vacancies-view/select-td/select-td.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {Component, Input} from '@angular/core';\nimport {Select} from '../../../components/forms/select/select';\n\ninterface SelectedTdAttributes {\n  options: Array<{value:string, label:string}>;\n}\n\n@Component({\n  selector: 'app-select-td',\n  imports: [\n    Select\n  ],\n  templateUrl: './select-td.html',\n  styleUrl: './select-td.scss'\n})\nexport class SelectTd {\n  @Input() attributes: SelectedTdAttributes = { options: [] };\n}\n",
            "properties": [
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<literal type>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "VacancyLogic",
            "id": "class-VacancyLogic-c1c6501d04b20aa1d42a11708a63d80362782b047899867681922927ba3258cbf5ed600dd4f56844b429723bf9dab5e6afb8060978a879e19b232cf764029e54",
            "file": "src/app/layout/vacancies-view/logic/VacancyLogic.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export default class VacancyLogic {\r\n\r\n  public PerformDataOperation(instructions:any, data:any) {\r\n    console.log(`PerformDataOperation ${instructions} over ${data}`);\r\n  }\r\n}\r\n",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [],
            "methods": [
                {
                    "name": "PerformDataOperation",
                    "args": [
                        {
                            "name": "instructions",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 3,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "instructions",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "App",
            "id": "component-App-93e5bf4107507bc4dced6e18d35cf895aad508e043f50cb8aab695e46b806b097392b50e394560349874fcf487c680784e99010d320d155116a10d1103c99875",
            "file": "src/app/app.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "signal('angular-20')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "VacanciesView"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, signal } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport {VacanciesView} from './layout/vacancies-view/vacancies-view';\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet,VacanciesView],\n  templateUrl: './app.html',\n  styleUrl: './app.scss'\n})\nexport class App {\n  protected readonly title = signal('angular-20');\n}\n",
            "styleUrl": "./app.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<app-vacancies-view></app-vacancies-view>\n<router-outlet/>\n"
        },
        {
            "name": "BadgeTd",
            "id": "component-BadgeTd-f638ada3dbbc02176538af6c075be223b20046279aeecb4a909e90da6ba678663ff0228eb91ca44ab0a352af53c2112ac25776755474bd15035d8ae1127d8049",
            "file": "src/app/layout/vacancies-view/badge-td/badge-td.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-badge-td",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./badge-td.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "attributes",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'app-badge-td',\n  imports: [],\n  templateUrl: './badge-td.html',\n  styleUrl: './badge-td.scss'\n})\nexport class BadgeTd {\n  @Input() attributes:any = {};\n}\n",
            "styleUrl": "./badge-td.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<td>\n  <span class=\"badge badge-pill bg-primary\">{{attributes.content}}</span>\n</td>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-f2d87b0001ee9c22cc88a00a7341b7e2f44b605977e7494290d5c8be3e849f1c099cf8aacd39bfebde8dd1132ac6d5bb74b281fb1651bad5b1d2fd79796db355",
            "file": "src/app/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "templateUrl": [
                "./button.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhat background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 657,
                            "end": 670,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 658,
                                "end": 666,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIs this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nHow large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 23,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOptional click handler",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 35,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {Component, Input, Output, EventEmitter, booleanAttribute} from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './button.html',\n  styleUrls: ['./button.css'],\n})\n\nexport class ButtonComponent {\n  /** Is this the principal call to action on the page? */\n  @Input({transform: booleanAttribute})\n  primary = false;\n\n  /** What background color to use */\n  @Input()\n  backgroundColor?: string;\n\n  /** How large should the button be? */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /** Optional click handler */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'btn btn-primary' : 'btn btn-secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button--small {\n  padding: 10px 16px;\n  font-size: 12px;\n}\n.storybook-button--medium {\n  padding: 11px 20px;\n  font-size: 14px;\n}\n.storybook-button--large {\n  padding: 12px 24px;\n  font-size: 16px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 37
                    }
                }
            },
            "templateData": "<button\r\n  type=\"button\"\r\n  (click)=\"onClick.emit($event)\"\r\n  [ngClass]=\"classes\"\r\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n>\r\n  {{ label }}\r\n</button>\r\n"
        },
        {
            "name": "CustomTd",
            "id": "component-CustomTd-5d584e0e4d71c4218554916573c1d7517c0356496fa5aafba06aad89c14bc82a70e4a448e11a4f485abb09786e4161c2e4008cf916945464bd4a2d5c164a8336",
            "file": "src/app/components/table/custom-td/custom-td.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-custom-td",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./custom-td.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "attributes",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "template",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "performUpdate",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NgComponentOutlet",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {NgComponentOutlet} from '@angular/common';\n\n@Component({\n  selector: 'app-custom-td',\n  templateUrl: './custom-td.html',\n  imports: [\n    NgComponentOutlet\n  ],\n  styleUrl: './custom-td.scss'\n})\n\nexport default class CustomTd {\n  @Input() template : any = null;\n  @Input() attributes : any = {};\n  @Output() performUpdate = new EventEmitter<any>();\n}\n",
            "styleUrl": "./custom-td.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<ng-container *ngComponentOutlet=\"template; inputs:{attributes}\"></ng-container>\n"
        },
        {
            "name": "DatepickerComponent",
            "id": "component-DatepickerComponent-a99b16bd2f23b362b6e1be4ff195a40ad43a41ab6eee1b57ee22fc235e52078b7e4ff80e007238400cdca5c756c65e097ff471b72f2556f9ea804740b55c4d4f",
            "file": "src/app/components/forms/datepicker/datepicker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-datepicker",
            "styleUrls": [
                "./datepicker.css"
            ],
            "styles": [],
            "templateUrl": [
                "./datepicker.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "inputLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "logic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onDateChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component,Input} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-datepicker',\r\n  standalone: true,\r\n  templateUrl: './datepicker.html',\r\n  styleUrls: ['./datepicker.css'],\r\n})\r\n\r\nexport default class DatepickerComponent {\r\n  @Input() inputLabel : string = '';\r\n  @Input() date: any;\r\n  @Input() logic:any;\r\n\r\n  onDateChange(event: any) {\r\n    this.logic.PerformDataOperation('update', event.target.value)\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./datepicker.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"form-floating\">\r\n  <input type=\"date\" class=\"form-control\" id=\"floatingInput\" placeholder=\"15/11/1997\" (change)=\"onDateChange($event)\">\r\n  <label for=\"floatingInput\">{{inputLabel}}</label>\r\n</div>\r\n"
        },
        {
            "name": "Dropdown",
            "id": "component-Dropdown-2d876d5f54e168b9728783a1bcb5f9046347359d0d0b2767c4330b01db04bfe02b7f0e3a3ceb98d51d8ea4e9513777ea0d1ead45778a1108d6e36a5ddefd369b",
            "file": "src/app/components/forms/dropdown/dropdown.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dropdown",
            "styleUrls": [
                "./dropdown.css"
            ],
            "styles": [],
            "templateUrl": [
                "./dropdown.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "inputLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "logic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "selectedOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "optionChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dropdown',\r\n  templateUrl: './dropdown.html',\r\n  styleUrls: ['./dropdown.css'],\r\n  standalone: true,\r\n})\r\nexport class Dropdown {\r\n  @Input() inputLabel : string = '';\r\n  @Input() options: any[] = [];\r\n  @Input() selectedOption: any;\r\n\r\n  @Input() logic: any;\r\n\r\n  optionChange(event: any) {\r\n    this.logic.PerformDataOperation('update', event.target.value)\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dropdown.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"form-floating\">\r\n  <select class=\"form-select\"  aria-label=\"Floating label select example\" (change)=\"optionChange($event)\">\r\n    @for (option of options; track option.value) {\r\n      @if (option.value === selectedOption){\r\n        <option value=\"{{option.value}}\" selected>{{option.label}} </option>\r\n      } @else {\r\n        <option value=\"{{option.value}}\">\r\n          {{option.label}}\r\n        </option>\r\n      }\r\n    }\r\n  </select>\r\n  <label for=\"floatingSelect\">{{inputLabel}}</label>\r\n</div>\r\n"
        },
        {
            "name": "DropDownTd",
            "id": "component-DropDownTd-64456c6d8a500505adc820dfe9aa3ed8074b45ccc4ad0f30ba428a1d4202ec4b70ca787b3e969d67fb1f5ea252b636625a17c54c154dc9f0ddbcd3bed582c7d2",
            "file": "src/app/layout/vacancies-view/drop-down-td/drop-down-td.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-drop-down-td",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./drop-down-td.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "attributes",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "Dropdown"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\nimport {Dropdown} from '../../../components/forms/dropdown/dropdown';\n\n@Component({\n  selector: 'app-drop-down-td',\n  imports: [\n    Dropdown\n  ],\n  templateUrl: './drop-down-td.html',\n  styleUrl: './drop-down-td.scss'\n})\nexport class DropDownTd {\n  @Input() attributes:any = {};\n}\n",
            "styleUrl": "./drop-down-td.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<app-dropdown\n  [inputLabel]=\"attributes.content.fieldName\"\n  [options]=\"attributes.content.options\"\n  [selectedOption]=\"attributes.content.selected\"\n>\n</app-dropdown>\n"
        },
        {
            "name": "IconLinkTd",
            "id": "component-IconLinkTd-1fdf71e5b484d3f11c3a5f23db469eb7eaedba2ca1d1ed5e5784f83613c4c4b0bb4ef1c20c5b734a922bde8b9c2c617e7b008dc523d9f1214fa5efdcb12a870b",
            "file": "src/app/layout/vacancies-view/icon-link-td/icon-link-td.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-link-td",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-link-td.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "attributes",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'app-icon-link-td',\n  imports: [],\n  templateUrl: './icon-link-td.html',\n  styleUrl: './icon-link-td.scss'\n})\nexport class IconLinkTd {\n  @Input() attributes:any = {};\n}\n",
            "styleUrl": "./icon-link-td.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<td>\n  <a href=\"{{attributes.content}}\">\n    <i class=\"bi bi-book\"></i>\n  </a>\n</td>\n"
        },
        {
            "name": "SearchBox",
            "id": "component-SearchBox-32e22af207234182aed5d29bed198e7f8e458585a69550d636ec7ef6fe4a2edb2c3218dc1117c83becbd40939f2891ab2db9880c2ce2918fd946105e8848eedd",
            "file": "src/app/components/forms/searchbox/searchbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-searchbox",
            "styleUrls": [
                "./searchbox.css"
            ],
            "styles": [],
            "templateUrl": [
                "./searchbox.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "inputLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "logic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "searchText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onInputChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component,Input,Output,EventEmitter} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-searchbox',\r\n  templateUrl: './searchbox.html',\r\n  styleUrls: ['./searchbox.css'],\r\n  standalone: true,\r\n})\r\n\r\nexport default class SearchBox {\r\n  @Input() inputLabel : string = '';\r\n  @Input() searchText: any='';\r\n  @Input() logic:any;\r\n\r\n  onInputChange(event: any) {\r\n    this.logic.PerformDataOperation('update', event.target.value)\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./searchbox.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"input-group\">\r\n  <span class=\"input-group-text\">\r\n    <span class=\"bi bi-search\"></span>\r\n  </span>\r\n  <div class=\"form-floating\">\r\n    <input type=\"text\" class=\"form-control\" id=\"floatingInputGroup1\" [placeholder]=\"inputLabel\" (change)=\"onInputChange($event)\">\r\n    <label for=\"floatingInputGroup1\">{{inputLabel}}</label>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "Select",
            "id": "component-Select-0b09459c4bab33da4a7dc94a50756a86301abdbf1ebfed83e734972527e9f8d85c9700e38358e923f41f0276665287268214c0b865c7efdf282cee4a42bfb2e9",
            "file": "src/app/components/forms/select/select.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./select.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "actions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "selectedOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "optionChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-select',\n  imports: [],\n  templateUrl: './select.html',\n  styleUrl: './select.scss'\n})\nexport class Select {\n  @Input() options: any[] = [];\n  @Input() selectedOption: any;\n  @Input() actions: any;\n\n  optionChange() {\n      this.actions.PerformDataOperation('update', this.selectedOption)\n  }\n}\n",
            "styleUrl": "./select.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<select class=\"form-select\" (change)=\"optionChange()\" aria-label=\"Default select example\">\n  @for (option of options; track option.value) {\n    @if(option.value === selectedOption) {\n     <option value=\"{{option.value}}\" selected>{{option.label}} </option>\n    } @else {\n      <option value=\"{{option.value}}\">\n        {{option.label}}\n      </option>\n    }\n  }\n</select>\n"
        },
        {
            "name": "SelectTd",
            "id": "component-SelectTd-11f2750c479facc709d0f72d5aacd16dae8f8fd24981ce262375862f0a22ede0e74ef8a62d1a90eb40d7dfab802c19b8529529f3f0396d1fee5974191d691433",
            "file": "src/app/layout/vacancies-view/select-td/select-td.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select-td",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./select-td.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "attributes",
                    "defaultValue": "{ options: [] }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "SelectedTdAttributes",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "Select"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\nimport {Select} from '../../../components/forms/select/select';\n\ninterface SelectedTdAttributes {\n  options: Array<{value:string, label:string}>;\n}\n\n@Component({\n  selector: 'app-select-td',\n  imports: [\n    Select\n  ],\n  templateUrl: './select-td.html',\n  styleUrl: './select-td.scss'\n})\nexport class SelectTd {\n  @Input() attributes: SelectedTdAttributes = { options: [] };\n}\n",
            "styleUrl": "./select-td.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<app-select\n  [options]=\"attributes.content.options\"\n  [selectedOption]=\"attributes.content.selected\"\n  [actions]=\"attributes.content.actions\"\n></app-select>\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-050f99c3c9d64c374f1d44b668ebe6839167ba7538b9f30242016d69442215050fd3cdf34386ae0bfa9b5a780a916b7ce9c2217608b7ff15c5d877660c85adb4",
            "file": "src/app/components/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table",
            "styleUrls": [
                "./table.css"
            ],
            "styles": [],
            "templateUrl": [
                "./table.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "columns",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "customTds",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "rowComponent",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "rows",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "any[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "updateFilterOrder",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "filterObject",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filterObject",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CustomTd"
                },
                {
                    "name": "CustomTd"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\r\nimport CustomTd from './custom-td/custom-td';\r\n\r\n@Component({\r\n  selector: 'app-table',\r\n  standalone: true,\r\n  templateUrl:'./table.html',\r\n  imports: [\r\n    CustomTd,\r\n    CustomTd\r\n  ],\r\n  styleUrls: ['./table.css']\r\n})\r\n\r\nexport default class TableComponent {\r\n  @Input() rows : any[] = [];\r\n  @Input() columns : any[] = [];\r\n  @Input() rowComponent : any = null;\r\n  @Input() customTds : any[] = [];\r\n\r\n  updateFilterOrder(event:MouseEvent, filterObject:any) {\r\n    //TODO: Implement a service to update the table\r\n\r\n    let item = event.currentTarget as HTMLElement;\r\n\r\n    let updatedFilter = filterObject;\r\n\r\n    updatedFilter.value = updatedFilter.value === \"ascendant\" ? \"descendant\" : \"ascendant\";\r\n\r\n    if(item.classList.contains(\"bi-arrow-up\")){\r\n      item.classList.remove(\"bi-arrow-up\");\r\n      item.classList.add(\"bi-arrow-down\");\r\n    } else {\r\n      item.classList.remove(\"bi-arrow-down\");\r\n      item.classList.add(\"bi-arrow-up\");\r\n    }\r\n  }\r\n}\r\n\r\n/* HELP!\r\n*  I was kidnapped and the boss is forcing me\r\n*  to use angular and bootstrap 💀 */\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".col-head {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: #f5f4f4;\r\n}\r\n\r\n.table-head{\r\n  background: #f5f4f4;\r\n}\r\n",
                    "styleUrl": "./table.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<table class=\"table\">\r\n  <thead>\r\n  <tr>\r\n    @for (column of columns; track column.columnName) {\r\n      <th scope=\"col\" class=\"table-head\">\r\n        <div class=\"col-head\">\r\n          {{column.columnLabel}}\r\n          <i class=\"bi bi-arrow-up\" (click)=\"updateFilterOrder($event, column[0])\"></i>\r\n        </div>\r\n      </th>\r\n    }\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n    @for (row of rows; track row.id) {\r\n      <tr>\r\n        @for (column of columns; track column.columnName) {\r\n          <td>\r\n            <app-custom-td\r\n              [template]=\"customTds[column.id-1]\"\r\n              [attributes]=\"{content:rows[row.id-1][column.columnName]}\"\r\n            >\r\n            </app-custom-td>\r\n          </td>\r\n        }\r\n      </tr>\r\n    } @empty {\r\n      <tr>\r\n        <td colspan=\"7\">No hay vacantes</td>\r\n      </tr>\r\n    }\r\n  </tbody>\r\n</table>\r\n"
        },
        {
            "name": "TextTd",
            "id": "component-TextTd-26cd4195ae158520682a18168bd78e871f4f665daf3863243fa4f1e51a47a43b323ded9524a9ff803543c14701032ac70380d444a8f8fe797750b3152b4b5b0c",
            "file": "src/app/layout/vacancies-view/textTd/textTd.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-textTd",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./textTd.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "attributes",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'app-textTd',\n  templateUrl: './textTd.html',\n  styleUrl: './textTd.scss'\n})\n\nexport class TextTd {\n  @Input() attributes:any = {};\n}\n",
            "styleUrl": "./textTd.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "{{attributes.content}}\n"
        },
        {
            "name": "VacanciesView",
            "id": "component-VacanciesView-7777f4fa2841a08bf4d5984664cad388dcd9f3ae23155c2126e87fdb4decfc03f264bd1574a4035b7611f8bb46b7c8d87b59cefab5ea76b05c857e9b58340e6e",
            "file": "src/app/layout/vacancies-view/vacancies-view.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-vacancies-view",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./vacancies-view.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "clientOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "recruiters",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "statusOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "tdComponents",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "vacancies",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IVacant[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "vacancyCols",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "vacancyLogic",
                    "defaultValue": "new VacancyLogic()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "vacancyRow",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "SearchBox"
                },
                {
                    "name": "DatepickerComponent",
                    "type": "component"
                },
                {
                    "name": "Dropdown"
                },
                {
                    "name": "TableComponent",
                    "type": "component"
                },
                {
                    "name": "TableComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport SearchBox from '../../components/forms/searchbox/searchbox.component';\nimport DatepickerComponent from '../../components/forms/datepicker/datepicker.component';\nimport {Dropdown} from '../../components/forms/dropdown/dropdown';\nimport TableComponent from '../../components/table/table.component';\nimport {IVacant} from '../../interfaces/IVacantRow';\nimport {TextTd} from './textTd/textTd';\nimport {IconLinkTd} from './icon-link-td/icon-link-td';\nimport {BadgeTd} from './badge-td/badge-td';\nimport {SelectTd} from './select-td/select-td';\nimport VacancyLogic from './logic/VacancyLogic';\n\n@Component({\n  selector: 'app-vacancies-view',\n  imports: [SearchBox, DatepickerComponent, Dropdown, TableComponent, TableComponent],\n  templateUrl: './vacancies-view.html',\n  styleUrl: './vacancies-view.scss'\n})\n\nexport class VacanciesView {\n  public statusOptions:any[];\n  public clientOptions : any[];\n  public vacancies : IVacant[];\n  public vacancyCols : any = [];\n  public vacancyRow : any = null;\n  public tdComponents : any = [];\n  public recruiters : any[];\n\n  public vacancyLogic = new VacancyLogic();\n\n  constructor() {\n    this.tdComponents = [\n      TextTd,\n      TextTd,\n      IconLinkTd,\n      SelectTd,\n      BadgeTd,\n      SelectTd,\n      TextTd\n    ];\n\n    this.statusOptions = [\n      {\n        value: 1,\n        label: \"Activo\"\n      },\n      {\n        value: 2,\n        label: \"Inactivo\"\n      }\n    ];\n\n    this.clientOptions = [\n      {\n        value: 1,\n        label: \"Beatriz Pinzon\"\n      },\n      {\n        value: 2,\n        label: \"Nicolas Mora\"\n      },\n      {\n        value: 3,\n        label: \"Hugo Lombardi\"\n      },\n      {\n        value: 4,\n        label: \"Marcela Valencia\"\n      },\n      {\n        value: 5,\n        label: \"Mario Calderon\"\n      }\n    ];\n\n    this.recruiters = [\n      {\n        value: 1,\n        label: \"Beatriz Pinzon\"\n      },\n      {\n        value: 2,\n        label: \"Nicolas Mora\"\n      }\n    ];\n\n    this.vacancies = [\n      {\n          id:1,\n          ticketNumber:\"Ticket #123\",\n          vacantName:\"Desarrollador\",\n          descriptionLink:\"https://www.google.com\",\n          recruiter:{\n            fieldName:\"\",\n            selected:1,\n            options:this.recruiters,\n            actions:this.vacancyLogic\n          },\n          status:\"Activo\",\n          recruiterStatus:{\n            fieldName:\"\",\n            selected:1,\n            options:this.statusOptions,\n            actions:this.vacancyLogic\n          },\n          comments:\"lorem ipsum dolor sit amet consectetur adipisicing elit.\"\n      },\n      {\n          id:2,\n          ticketNumber:\"Ticket #124\",\n          vacantName:\"Desarrollador\",\n          descriptionLink:\"https://images.google.com\",\n          recruiter:{\n            fieldName:\"\",\n            selected:2,\n            options:this.recruiters,\n            actions: this.vacancyLogic\n          },\n          status:\"Activo\",\n          recruiterStatus:{\n            fieldName: \"\",\n            selected: 2,\n            options: this.statusOptions,\n            actions: this.vacancyLogic\n          },\n          comments:\"lorem ipsum dolor sit amet consectetur adipisicing elit.\"\n      }\n    ];\n\n    this.vacancyCols = [\n      {\n        id:1,\n        columnName:\"ticketNumber\",\n        columnLabel:\"# de Ticket\",\n        value:\"ascendant\"\n      },\n      {\n        id:2,\n        columnName:\"vacantName\",\n        columnLabel:\"Vacante\",\n        value:\"ascendant\"\n      },\n      {\n        id:3,\n        columnName:\"descriptionLink\",\n        columnLabel: \"Descripcion\",\n        value:\"ascendant\"\n      },\n      {\n        id:4,\n        columnName:\"recruiter\",\n        columnLabel:\"Reclutador\",\n        value:\"ascendant\"\n      },\n      {\n        id:5,\n        columnName:\"status\",\n        columnLabel:\"Estado\",\n        value:\"ascendant\"\n      },\n      {\n        id:6,\n        columnName:\"recruiterStatus\",\n        columnLabel:\"Estado del Reclutador\",\n        value:\"ascendant\"\n      },\n      {\n        id:7,\n        columnName:\"comments\",\n        columnLabel:\"Comentarios\",\n        value:\"ascendant\"\n      }\n    ];\n  }\n}\n",
            "styleUrl": "./vacancies-view.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 29
            },
            "extends": [],
            "templateData": "<div class=\"container\">\n  <app-searchbox [inputLabel]=\"'Buscar'\" [logic]=\"vacancyLogic\"></app-searchbox>\n  <app-datepicker [inputLabel]=\"'Fecha Inicio'\" [logic]=\"vacancyLogic\"></app-datepicker>\n  <app-datepicker [inputLabel]=\"'Fecha Fin'\" [logic]=\"vacancyLogic\"></app-datepicker>\n  <app-dropdown [inputLabel]=\"'Estatus'\" [options]=\"statusOptions\" [logic]=\"vacancyLogic\"></app-dropdown>\n  <app-dropdown [inputLabel]=\"'Cliente'\" [options]=\"clientOptions\" [logic]=\"vacancyLogic\"></app-dropdown>\n</div>\n<div class=\"container\">\n  <app-table\n    [rows]=\"vacancies\"\n    [rowComponent]=\"vacancyRow\"\n    [columns]=\"vacancyCols\"\n    [customTds]=\"tdComponents\"\n  >\n  </app-table>\n</div>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes)\n  ]\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes)\n  ]\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 4,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.ts",
                "type": "component",
                "linktype": "component",
                "name": "App",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/app/components/forms/datepicker/datepicker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatepickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/forms/dropdown/dropdown.ts",
                "type": "component",
                "linktype": "component",
                "name": "Dropdown",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/forms/searchbox/searchbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchBox",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/forms/select/select.ts",
                "type": "component",
                "linktype": "component",
                "name": "Select",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/table/custom-td/custom-td.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomTd",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/IVacantRow.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IVacant",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/vacancies-view/badge-td/badge-td.ts",
                "type": "component",
                "linktype": "component",
                "name": "BadgeTd",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/vacancies-view/drop-down-td/drop-down-td.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropDownTd",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/vacancies-view/icon-link-td/icon-link-td.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconLinkTd",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/vacancies-view/logic/VacancyLogic.ts",
                "type": "class",
                "linktype": "classe",
                "name": "VacancyLogic",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/vacancies-view/select-td/select-td.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectTd",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/vacancies-view/select-td/select-td.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SelectedTdAttributes",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/vacancies-view/textTd/textTd.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextTd",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/vacancies-view/vacancies-view.ts",
                "type": "component",
                "linktype": "component",
                "name": "VacanciesView",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}